<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.llf.demo.dao.transactionsMapper">
  <resultMap id="BaseResultMap" type="io.llf.demo.po.transactions">
    <id column="txid" jdbcType="INTEGER" property="txid" />
    <result column="txhash" jdbcType="CHAR" property="txhash" />
    <result column="blockhash" jdbcType="CHAR" property="blockhash" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="weight" jdbcType="REAL" property="weight" />
    <result column="confirmations" jdbcType="INTEGER" property="confirmations" />
    <result column="totalinput" jdbcType="DOUBLE" property="totalinput" />
    <result column="totaloutput" jdbcType="DOUBLE" property="totaloutput" />
    <result column="fees" jdbcType="DOUBLE" property="fees" />
    <result column="feeperbyte" jdbcType="DOUBLE" property="feeperbyte" />
    <result column="feeperweightunit" jdbcType="DOUBLE" property="feeperweightunit" />
    <result column="btctransacted" jdbcType="DOUBLE" property="btctransacted" />
  </resultMap>
  <sql id="Base_Column_List">
    txid, txhash, blockhash, time, amount, size, weight, confirmations, totalinput, totaloutput, 
    fees, feeperbyte, feeperweightunit, btctransacted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_transactions
    where txid = #{txid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_transactions
    where txid = #{txid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="io.llf.demo.po.transactions">
    insert into tb_transactions (txid, txhash, blockhash, 
      time, amount, size, 
      weight, confirmations, totalinput, 
      totaloutput, fees, feeperbyte, 
      feeperweightunit, btctransacted)
    values (#{txid,jdbcType=INTEGER}, #{txhash,jdbcType=CHAR}, #{blockhash,jdbcType=CHAR}, 
      #{time,jdbcType=TIMESTAMP}, #{amount,jdbcType=DOUBLE}, #{size,jdbcType=INTEGER}, 
      #{weight,jdbcType=REAL}, #{confirmations,jdbcType=INTEGER}, #{totalinput,jdbcType=DOUBLE}, 
      #{totaloutput,jdbcType=DOUBLE}, #{fees,jdbcType=DOUBLE}, #{feeperbyte,jdbcType=DOUBLE}, 
      #{feeperweightunit,jdbcType=DOUBLE}, #{btctransacted,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="io.llf.demo.po.transactions">
    insert into tb_transactions
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="txid != null">
        txid,
      </if>
      <if test="txhash != null">
        txhash,
      </if>
      <if test="blockhash != null">
        blockhash,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="confirmations != null">
        confirmations,
      </if>
      <if test="totalinput != null">
        totalinput,
      </if>
      <if test="totaloutput != null">
        totaloutput,
      </if>
      <if test="fees != null">
        fees,
      </if>
      <if test="feeperbyte != null">
        feeperbyte,
      </if>
      <if test="feeperweightunit != null">
        feeperweightunit,
      </if>
      <if test="btctransacted != null">
        btctransacted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="txid != null">
        #{txid,jdbcType=INTEGER},
      </if>
      <if test="txhash != null">
        #{txhash,jdbcType=CHAR},
      </if>
      <if test="blockhash != null">
        #{blockhash,jdbcType=CHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=REAL},
      </if>
      <if test="confirmations != null">
        #{confirmations,jdbcType=INTEGER},
      </if>
      <if test="totalinput != null">
        #{totalinput,jdbcType=DOUBLE},
      </if>
      <if test="totaloutput != null">
        #{totaloutput,jdbcType=DOUBLE},
      </if>
      <if test="fees != null">
        #{fees,jdbcType=DOUBLE},
      </if>
      <if test="feeperbyte != null">
        #{feeperbyte,jdbcType=DOUBLE},
      </if>
      <if test="feeperweightunit != null">
        #{feeperweightunit,jdbcType=DOUBLE},
      </if>
      <if test="btctransacted != null">
        #{btctransacted,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.llf.demo.po.transactions">
    update tb_transactions
    <set>
      <if test="txhash != null">
        txhash = #{txhash,jdbcType=CHAR},
      </if>
      <if test="blockhash != null">
        blockhash = #{blockhash,jdbcType=CHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=REAL},
      </if>
      <if test="confirmations != null">
        confirmations = #{confirmations,jdbcType=INTEGER},
      </if>
      <if test="totalinput != null">
        totalinput = #{totalinput,jdbcType=DOUBLE},
      </if>
      <if test="totaloutput != null">
        totaloutput = #{totaloutput,jdbcType=DOUBLE},
      </if>
      <if test="fees != null">
        fees = #{fees,jdbcType=DOUBLE},
      </if>
      <if test="feeperbyte != null">
        feeperbyte = #{feeperbyte,jdbcType=DOUBLE},
      </if>
      <if test="feeperweightunit != null">
        feeperweightunit = #{feeperweightunit,jdbcType=DOUBLE},
      </if>
      <if test="btctransacted != null">
        btctransacted = #{btctransacted,jdbcType=DOUBLE},
      </if>
    </set>
    where txid = #{txid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.llf.demo.po.transactions">
    update tb_transactions
    set txhash = #{txhash,jdbcType=CHAR},
      blockhash = #{blockhash,jdbcType=CHAR},
      time = #{time,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=DOUBLE},
      size = #{size,jdbcType=INTEGER},
      weight = #{weight,jdbcType=REAL},
      confirmations = #{confirmations,jdbcType=INTEGER},
      totalinput = #{totalinput,jdbcType=DOUBLE},
      totaloutput = #{totaloutput,jdbcType=DOUBLE},
      fees = #{fees,jdbcType=DOUBLE},
      feeperbyte = #{feeperbyte,jdbcType=DOUBLE},
      feeperweightunit = #{feeperweightunit,jdbcType=DOUBLE},
      btctransacted = #{btctransacted,jdbcType=DOUBLE}
    where txid = #{txid,jdbcType=INTEGER}
  </update>
</mapper>